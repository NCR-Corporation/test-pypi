name: Open New PR
on:
  pull_request_target:
    branches: 
      - 'fork-*'
    types: [closed]

env:
  WORKFLOW_FILES_FOUND: updated-workflows
  FORK_TESTS_PASSED: fork-tests-passed
jobs:
  env-vars:
    runs-on: ubuntu-latest
    outputs:
      workflow_files_found: ${{env.WORKFLOW_FILES_FOUND}}
      fork_tests_passed: ${{env.FORK_TESTS_PASSED}}
    steps:
      - run: echo "${{toJSON(github)}}"
  open-pr:
    name: Open new pull request from fork
    needs: [env-vars]
    if: github.event.pull_request.merged == true && contains(github.event.pull_request.labels.*.name, needs.env-vars.outputs.fork_tests_passed) && !contains(github.event.pull_request.labels.*.name, needs.env-vars.outputs.workflow_files_found)
    runs-on: ubuntu-latest
    env:
      GITHUB_TOKEN: ${{secrets.GITHUB_TOKEN }}
    steps:
      - run: echo "${{toJSON(github)}}"
      - name: Gather vars
        id: fork
        run: |
          echo "Github ref ${{github.event.ref}}"
          ref=${{github.event.ref}}
          echo "::set-output name=name::${ref##*fork-}"
          echo "::set-output name=assignee::$(gh pr view ${{github.event.number}} -R ${{github.repository}} --json assignees --jq '.assignees[0].login')"
          echo "::set-output name=title::$(gh pr view ${{github.event.number}} -R ${{github.repository}} --json "title" --jq '.title')"
      # need to be in a git repo to create a new pr. DO NOT UPDATE REF TO HEAD BRANCH.
      - uses: actions/checkout@v2
      - name: Open new pr
        id: new-pr
        run: |
          echo "The new branch name is ${new_branch}"
          echo "::set-output name=link::$(gh pr create --base "${{github.event.pull_request.base.repo.default_branch}}" --body "" --head "$head_branch" --title "$title" --assignee "$assignee" -R ${{github.repository}})"
        env:
          head_branch: ${{steps.fork.outputs.name}}
          assignee: ${{steps.fork.outputs.assignee}}
          title:  ${{steps.fork.outputs.title}}
          GITHUB_TOKEN: ${{secrets.GA_PAT }}
      - name: Comment link to new pr on merged fork
        run: gh pr comment ${{github.event.number}} --body "This PR has been approved and moved to a new pr ${{steps.new-pr.outputs.link}}" -R ${{github.repository}}