name: Labeled Events
on:
  pull_request_target:
    branches: [main]
    types: [labeled]
env:
  INTERNAL_REPO: NCR-Corporation/gsre-internal
  TESTS_PASSED: tests-passed
  SONAR_FAILED: sonar-failed
  COV_FAILED: coverity-failed
  SONAR_PASSED: sonar-passed
  COV_PASSED: coverity-passed
  LICENSE_LABEL: has-license
  VERSION_LABEL: updated-version
  UPLOAD_LABEL: upload2testpypi
  TESTPYPI_UPLOADED: testpypi-uploaded
  TESTPYPI_UPLOAD_FAILED: testpypi-upload-failed
  TESTPYPI_STALE: testpypi-stale
  NON_RELEASE_LABEL: non-release
jobs:
  verify:
    name: Verify author/labeler
    runs-on: ubuntu-latest
    outputs:
      tests_passed: ${{env.TESTS_PASSED}}
      sonar_failed: ${{env.SONAR_FAILED}}
      cov_failed: ${{env.COV_FAILED}}
      upload_label: ${{env.UPLOAD_LABEL}}
      testpypi_uploaded: ${{env.TESTPYPI_UPLOADED}}
      testpypi_upload_failed: ${{env.TESTPYPI_UPLOAD_FAILED}}
      testpypi_stale: ${{env.TESTPYPI_STALE}}
      non_release_label: ${{env.NON_RELEASE_LABEL}}
    steps:
      - run: echo "${{toJSON(github)}}"
      - name: Get actors permissions
        if: github.event.action == 'labeled'
        run: |
          if [[ "${{github.actor}}" == "ga230204" ]]; then
            echo "Bot account" && exit 0
          fi
          perm=$(gh api "/repos/${{github.repository}}/collaborators/${{github.actor}}/permission" --jq '.permission')

          if [[ "$perm" != 'admin' ]]; then
            echo "User does not have appropriate rights to label the pr"
            gh pr edit ${{github.event.number}} --remove-label "${{github.event.label.name}}" -R ${{github.repository}}
            exit 1
          fi
        env:
          GITHUB_TOKEN: ${{secrets.GA_PAT }}
  sonar-cover:
    name: Sonar and Coverity Scans
    needs: [verify]
    runs-on: ubuntu-latest
    if: |
      contains(github.event.pull_request.labels.*.name, needs.verify.outputs.tests_passed) || 
      contains(github.event.pull_request.labels.*.name, needs.verify.outputs.sonar_failed) || 
      contains(github.event.pull_request.labels.*.name, needs.verify.outputs.cov_failed)
    steps:
      - name: Tests Passed
        if: contains(github.event.pull_request.labels.*.name, env.TESTS_PASSED)
        run: echo "Success"
      - name: One or more tests have failed
        if: contains(github.event.pull_request.labels.*.name, env.SONAR_FAILED) || contains(github.event.pull_request.labels.*.name, env.COV_FAILED)
        run: |
          echo "Failure"
          exit 1
  upload-triggered:
    name: Upload to TestPypi server
    needs: [verify]
    runs-on: ubuntu-latest
    if: github.event.action == 'labeled' && github.event.label.name == needs.verify.outputs.upload_label
    steps:
      - name: Prevent upload before tests have passed
        if: "!contains(github.event.pull_request.labels.*.name, env.TESTS_PASSED)"
        run: echo "Cannot upload to testpypi until all tests have passed" && exit 1
      - name: Prevent upload without license
        if: "!contains(github.event.pull_request.labels.*.name, env.LICENSE_LABEL)"
        run: echo "Cannot upload to testpypi without a license" && exit 1
      - name: Prevent upload without updated version number
        if: "!contains(github.event.pull_request.labels.*.name, env.VERSION_LABEL)"
        run: echo "Cannot upload to testpypi without an updated version number" && exit 1
      - name: Remove Label
        if: failure()
        run: gh pr edit ${{github.event.number}} --remove-label $UPLOAD_LABEL -R ${{github.repository}}
        env:
          GITHUB_TOKEN: ${{secrets.GA_PAT }}
      - name: Trigger Upload
        run: |
          echo "repo ${{github.repository}}"
          echo "branch ${{github.head_ref}}"
          echo "pr_num ${{github.event.number}}"
          echo "pypi_server test"
          gh workflow run pypi_upload.yml -R $INTERNAL_REPO -f repo=${{github.repository}} -f branch="${{github.head_ref}}" -f pr_num=${{github.event.number}} -f pypi_server='test'
        env:
          GITHUB_TOKEN: ${{secrets.GA_PAT }}


  testpypi-upload:
    name: Verify Successful Upload to testpypi
    needs: [verify]
    runs-on: ubuntu-latest
    if: |
      contains(github.event.pull_request.labels.*.name, needs.verify.outputs.testpypi_uploaded) ||
      contains(github.event.pull_request.labels.*.name, needs.verify.outputs.testpypi_upload_failed) ||
      contains(github.event.pull_request.labels.*.name, needs.verify.outputs.testpypi_stale) ||
      contains(github.event.pull_request.labels.*.name, needs.verify.outputs.non_release_label)
    steps:
      - name: Test Uploaded Package
        if: contains(github.event.pull_request.labels.*.name, env.TESTPYPI_UPLOADED)
        run: |
          # TODO add some tests of the package and fail this if they don't pass
          echo "Success"
      - name: Upload Failed
        if: contains(github.event.pull_request.labels.*.name, env.TESTPYPI_UPLOAD_FAILED)
        run: echo "Failure" && exit 1
      - name: Upload Stale
        if: contains(github.event.pull_request.labels.*.name, env.TESTPYPI_STALE)
        run: echo "Testpypi upload is stale" && exit 1
      - name: Non release
        if: contains(github.event.pull_request.labels.*.name, needs.verify.outputs.non_release_label)
        run: |
          echo "Non-Release PR"
          if ${{contains(github.event.pull_request.labels.*.name, env.TESTS_PASSED)}} || ${{contains(github.event.pull_request.labels.*.name, env.SONAR_PASSED)}} || ${{contains(github.event.pull_request.labels.*.name, env.COV_PASSED)}} ||${{contains(github.event.pull_request.labels.*.name, env.SONAR_FAILED)}} || ${{contains(github.event.pull_request.labels.*.name, env.COV_FAILED)}} || ${{contains(github.event.pull_request.labels.*.name, env.LICENSE_LABEL)}} ||  ${{contains(github.event.pull_request.labels.*.name, env.VERSION_LABEL)}} || ${{contains(github.event.pull_request.labels.*.name, env.TESTPYPI_UPLOADED)}} || ${{contains(github.event.pull_request.labels.*.name, env.TESTPYPI_UPLOAD_FAILED)}} || ${{contains(github.event.pull_request.labels.*.name, env.UPLOAD_LABEL)}}; then
            echo "Removing label(s)"
            gh pr edit ${{github.event.number}} --remove-label $TESTS_PASSED --remove-label $SONAR_PASSED --remove-label $COV_PASSED --remove-label $SONAR_FAILED --remove-label $COV_FAILED --remove-label $LICENSE_LABEL --remove-label $VERSION_LABEL --remove-label $TESTPYPI_UPLOADED --remove-label $TESTPYPI_UPLOAD_FAILED --remove-label $UPLOAD_LABEL -R ${{github.repository}}
          fi
        env:
          GITHUB_TOKEN: ${{secrets.GA_PAT }}
